name: Build Sample
on:
  push:
    branches:
    - master
    - develop

jobs:

  # build:
  #   runs-on: macos-latest
  #   env:
  #     CERT_KEY: ${{ secrets.CERT_KEY }}
  #     DECRYPT_KEY: ${{ secrets.DECRYPT_KEY }}
  #     KEYCHAIN: ${{ 'some.keychain' }}
  #   steps:

  #   - uses: actions/checkout@v2

  #   - name: Set Xcode Version
  #     run: sudo xcode-select -s /Applications/Xcode_12.app/Contents/Developer

  #   - name: Keychain
  #     run: |
  #       security create-keychain -p "" "$KEYCHAIN"
  #       security list-keychains -s "$KEYCHAIN"
  #       security default-keychain -s "$KEYCHAIN"
  #       security unlock-keychain -p "" "$KEYCHAIN"
  #       security set-keychain-settings

  #   - name: Prepare Provision and Code Signing
  #     run: |
  #       gpg -d -o ./certs.p12 --pinentry-mode=loopback --passphrase "$DECRYPT_KEY" ./certs.p12.gpg
  #       gpg -d -o ./provisioning.tar.gz --pinentry-mode=loopback --passphrase "$DECRYPT_KEY" ./provisioning.tar.gz.gpg
  #       security import ./certs.p12 -k "$KEYCHAIN" -P "$CERT_KEY" -A        
  #       security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"
  #       tar xzvf ./provisioning.tar.gz
  #       mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
  #       for PROVISION in `ls ./*.mobileprovision`
  #       do
  #         UUID=`/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ./$PROVISION)`
  #         cp "./$PROVISION" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"
  #       done

  #   - name: Build
  #     run: |
  #       pod install
  #       xcodebuild build -workspace ActionSample.xcworkspace -configuration Automation -scheme ActionSample "OTHER_CODE_SIGN_FLAGS=--keychain '$KEYCHAIN'"
  #       xcodebuild archive -workspace ActionSample.xcworkspace -scheme ActionSample -archivePath sample.xcarchive
  #       xcodebuild -exportArchive -archivePath sample.xcarchive -exportPath . -exportOptionsPlist ./ExportOptions.plist

  upload:
    runs-on: ubuntu-latest
    # needs: build
    env:
      APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
    steps:

    - name: Upload ipa to App Center
      uses: wzieba/AppCenter-Github-Action@v1.1.1
      with:
        appName: luisrjaeger/Action-Sample
        token: ${{ secrets.APPCENTER_TOKEN }}
        group: testers
        file: ActionSample.ipa
